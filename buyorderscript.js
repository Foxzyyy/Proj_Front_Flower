
async function fetchbuy() {
    const res = await fetch("http://localhost:3000/orders");
    const buyorders = await res.json();
    
    const productBuyContainer = document.getElementById("productbuy");


    productBuyContainer.innerHTML = buyorders.map(order => `
        <div class="product-card">
             <h2>‡∏ä‡∏∑‡πà‡∏≠: ${order.namef}</h2>
            <h2>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${order.numbuy}</h2>
            <h2>‡∏£‡∏≤‡∏Ñ‡∏≤: ${order.cost}</h2>
            <p>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°: ${order.total} ‡∏ö‡∏≤‡∏ó</p>
            <p>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${order.status}</p>
            <p>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: ${order.buy_at}</p>
            <button class="edit-btn" onclick="editorder(${order.id},'${order.namef}', ${order.numbuy},${order.cost},${order.total})">‚úèÔ∏è Edit</button>
            <button class="delete-btn" onclick="deleteorder(${order.id})">üóëÔ∏è Delete</button>
        </div>    
    `).join("");
}
// ‚úÖ ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
async function deleteorder(id) {
    if (!confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) {
        return;
    }

    const response = await fetch(`http://localhost:3000/orders/${id}`, { method: "DELETE" });

    if (response.ok) {
        alert("Order deleted successfully!");
        fetchbuy();
    } else {
        alert("Failed to delete order");
    }
}
// ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
async function editorder(id, name, numbuy, cost, total) {
    const newNumbuy = prompt("Enter new quantity:", numbuy);

    if (!newNumbuy || isNaN(newNumbuy) || newNumbuy <= 0) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        return;
    }

    const totalNew = newNumbuy * cost;

    // Ask for confirmation before changing status to "complete"
    if (!confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô 'Complete' ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) {
        return; // ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    }

    try {
        // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ PUT ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "complete"
        const response = await fetch(`http://localhost:3000/orders/${id}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                namef: name,            // ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                numbuy: newNumbuy,      // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
                cost: cost,             // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                total: totalNew,        // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏´‡∏°‡πà
                status: "complete"      // ‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "complete"
            })
        });

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
        if (!response.ok) {
            throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ");
        }

        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        alert("Order updated successfully! The status has been set to 'complete'.");
        
        // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
        fetchbuy();
    } catch (error) {
        alert("‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + error.message);
    }
}


// ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
fetchbuy();
// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
document.getElementById("openPopup").addEventListener("click", function() {
    document.getElementById("popup").style.display = "block";
});

document.getElementById("closePopupCustomer").addEventListener("click", function() {
    document.getElementById("popup").style.display = "none";
});

document.getElementById("customerForm").addEventListener("submit", async function(event) {
    event.preventDefault();

    const name = document.getElementById("name").value;
    const address = document.getElementById("address").value;
    const phone = document.getElementById("phone").value;

    const response = await fetch("http://localhost:3000/customers", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ customer_name: name, address, phone }) 
    });

    if (response.ok) {
        alert("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
        document.getElementById("popup").style.display = "none";
        fetchCustomers();
    } else {
        alert("‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
    }
});

async function fetchCustomers() {
    const res = await fetch("http://localhost:3000/customers");
    const customers = await res.json();
    const customerList = document.getElementById("customerList");

    customerList.innerHTML = customers.map(customer => `
        <div class="product-card">
            <h2>‡∏ä‡∏∑‡πà‡∏≠: ${customer.customer_name}</h2>
            <h2>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${customer.address}</h2>
            <h2>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${customer.phone}</h2>
            <button class="edit-btn" onclick="editcustomer(${customer.id}, '${customer.customer_name}', '${customer.address}', ${customer.phone})">‚úèÔ∏è Edit</button>
            <button class="delete-btn" onclick="deletcustomer(${customer.id})">üóëÔ∏è Delete</button>
        </div>
    `).join("");
}

// ‚úÖ ‡∏•‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
async function deletcustomer(id) {
    if (!confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) {
        return;
    }

    const response = await fetch(`http://localhost:3000/customers/${id}`, { method: "DELETE" });

    if (response.ok) {
        alert("Order deleted successfully!");
        fetchCustomers();
    } else {
        alert("Failed to delete order");
    }
}
// ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
async function editcustomer(id, name, address, phone) {
    const customer_name = prompt("Enter new name:", name);
    const newAddress = prompt("Enter new address:", address);
    const newPhone = prompt("Enter new phone:", phone);

    if (!customer_name || !newAddress || !newPhone || isNaN(newPhone)) {
        alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        return;
    }

    try {
        const response = await fetch(`http://localhost:3000/customers/${id}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ customer_name, address: newAddress, phone: parseInt(newPhone) })
        });

        if (!response.ok) {
            throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ");
        }

        alert("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
        fetchCustomers();
    } catch (error) {
        alert("‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + error.message);
    }
}

// ‡πÅ‡∏™‡∏î‡∏á Popup ‡πÅ‡∏•‡∏∞‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
document.addEventListener("DOMContentLoaded", function() {
    const confirmBtn = document.getElementById("confirmBtn");
    const closePopupCustomer = document.getElementById("closePopupCustomer");
    const closePopupConfirm = document.getElementById("closePopupConfirm");
    const nextPageBtn = document.getElementById("nextPageBtn");
    const popupCustomer = document.getElementById("popup");
    const popupConfirm = document.getElementById("popupf");

    if (!confirmBtn || !closePopupCustomer || !closePopupConfirm || !nextPageBtn || !popupCustomer || !popupConfirm) {
        console.error("‚ùå Popup elements not found");
        return;
    }

    // ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô" ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏™‡∏î‡∏á Popup
    confirmBtn.addEventListener("click", function() {
        popupConfirm.style.display = "block";
    });

    // ‡∏õ‡∏¥‡∏î Popup ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    closePopupCustomer.addEventListener("click", function() {
        popupCustomer.style.display = "none";
    });

    // ‡∏õ‡∏¥‡∏î Popup ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    closePopupConfirm.addEventListener("click", function() {
        popupConfirm.style.display = "none";
    });

    // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    nextPageBtn.addEventListener("click", function() {
        


        window.location.href = "bill.html";
    });
});





// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
fetchCustomers();
